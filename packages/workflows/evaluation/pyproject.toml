[tool.coverage.run]
branch = true
source = [ "evaluation_workflow" ]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-report html:'../../../coverage/packages/workflows/evaluation/html'
 --cov-report xml:'../../../coverage/packages/workflows/evaluation/coverage.xml'
 --html='../../../reports/packages/workflows/evaluation/unittests/html/index.html'
 --junitxml='../../../reports/packages/workflows/evaluation/unittests/junit.xml'
"""

[project]
name = "evaluation-workflow"
version = "1.0.0"
description = "Automatically generated by Nx."
requires-python = ">=3.10,<4"
readme = 'README.md'
dependencies = [
  "py-vmx-utils",
  "dependency-injector>=4.46.0",
  "py-aws-shared",
  "py-schemas",
  "py-logger"
]

[project.optional-dependencies]
temporal = [
  "py-aws-sqs-consumer",
  "workflow-shared-activities[temporal]",
  "py-temporal-utils",
]
aws_lambda = [
  "numpy==2.2.5",
  "py-db-models",
  "py-db-repositories",
  "py-db-services",
  "py-services",
  "py-utils",
  "pydantic-settings>=2.9.1",
  "workflow-shared-activities",
]

[tool.hatch.build.targets.wheel]
packages = ["evaluation_workflow"]

[tool.hatch.metadata]
allow-direct-references = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "dist",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []

[tool.uv.sources]
workflow-shared-activities = { workspace = true }
py-aws-sqs-consumer = { workspace = true }
py-temporal-utils = { workspace = true }
py-logger = { workspace = true }
py-db-models = { workspace = true }
py-db-repositories = { workspace = true }
py-db-services = { workspace = true }
py-services = { workspace = true }
py-utils = { workspace = true }
py-aws-shared = { workspace = true }
py-vmx-utils = { workspace = true }
