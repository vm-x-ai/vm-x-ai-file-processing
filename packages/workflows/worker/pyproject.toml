[tool.coverage.run]
branch = true
source = [ "workflow_worker" ]

[tool.coverage.report]
exclude_lines = [ "if TYPE_CHECKING:" ]
show_missing = true

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-report html:'../../../coverage/packages/workflows/ingestion/html'
 --cov-report xml:'../../../coverage/packages/workflows/ingestion/coverage.xml'
 --html='../../../reports/packages/workflows/ingestion/unittests/html/index.html'
 --junitxml='../../../reports/packages/workflows/ingestion/unittests/junit.xml'
"""

[tool.hatch.build.targets.wheel]
packages = [ "workflow_worker" ]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
exclude = [ ".ruff_cache", ".svn", ".tox", ".venv", "dist" ]
line-length = 88
indent-width = 4

  [tool.ruff.lint]
  select = [ "E", "F", "UP", "B", "SIM", "I" ]
  ignore = [ "B008" ]
  fixable = [ "ALL" ]
  unfixable = [ ]

[tool.uv.sources]
py-utils = { workspace = true }
py-db-models = { workspace = true }
py-db-repositories = { workspace = true }
py-services = { workspace = true }
py-db-services = { workspace = true }
py-temporal-utils = { workspace = true }
py-logger = { workspace = true }
py-schemas = { workspace = true }
workflow-ingestion = { workspace = true }
evaluation-workflow = { workspace = true }
py-vmx-utils = { workspace = true } 
py-aws-shared = { workspace = true }

[project]
name = "workflow-worker"
version = "1.0.0"
description = "Automatically generated by Nx."
requires-python = ">=3.10,<4"
readme = "README.md"
dependencies = [
 "py-aws-shared",
 "dependency-injector>=4.46.0",
 "langchain-community>=0.3.24",
 "langchain-openai>=0.3.16",
 "langchain-text-splitters>=0.3.8",
 "pdf2image>=1.17.0",
 "pypdf>=5.5.0",
 "tiktoken>=0.9.0",
 "py-utils",
 "py-vmx-utils",
 "py-db-models",
 "py-db-repositories",
 "py-services[temporal]",
 "py-db-services",
 "py-temporal-utils",
 "py-logger",
 "py-schemas",
 "workflow-ingestion",
 "evaluation-workflow",
]

[build-system]
requires = [ "hatchling" ]
build-backend = "hatchling.build"
