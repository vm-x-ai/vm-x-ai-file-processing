apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.resourcePrefix }}-api"
  namespace: "{{ .Values.namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.resourcePrefix }}-api"
  template:
    metadata:
      labels:
        app: "{{ .Values.resourcePrefix }}-api"
    spec:
      serviceAccountName: "{{ .Values.resourcePrefix }}-api-service-account"
      containers:
        - name: "{{ .Values.resourcePrefix }}-api"
          image: "{{ .Values.ecrRepositoryName }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8000
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.resourcePrefix }}-app-database-secret"
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.resourcePrefix }}-app-database-secret"
                  key: password
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.resourcePrefix }}-app-database-secret"
                  key: host
            - name: DB_RO_HOST
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.resourcePrefix }}-app-database-ro-host"
                  key: "{{ .Values.resourcePrefix }}-app-database-ro-host"
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.resourcePrefix }}-app-database-secret"
                  key: port
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.resourcePrefix }}-app-database-secret"
                  key: dbname
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "openai-credentials"
                  key: api_key
            - name: LANDING_S3_BUCKET_NAME
              value: "{{ .Values.resourcePrefix }}-ingestion-landing-{{ .Values.awsAccountId }}-{{ .Values.awsRegion }}-{{ .Values.stage }}"
            - name: TEMPORAL_HOST
              value: "temporal-frontend.temporal:7233"
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          volumeMounts:
            - name: app-secrets-store-inline
              mountPath: '/mnt/secrets-store'
              readOnly: true
      volumes:
        - name: app-secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "{{ .Values.resourcePrefix }}-app-secrets"
