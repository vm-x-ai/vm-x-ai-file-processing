[tool.coverage.run]
branch = true
source = [ "api" ]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-report html:'../../../coverage/packages/apps/api/html'
 --cov-report xml:'../../../coverage/packages/apps/api/coverage.xml'
 --html='../../../reports/packages/apps/api/unittests/html/index.html'
 --junitxml='../../../reports/packages/apps/api/unittests/junit.xml'
"""

[project]
name = "api"
version = "1.0.0"
description = "API"
requires-python = ">=3.9,<4"
readme = 'README.md'
dependencies = [
    "dependency-injector>=4.46.0",
    "fastapi>=0.115.12",
    "vmxfp-py-db-models",
    "vmxfp-py-db-repositories",
    "vmxfp-py-db-services",
    "vmxfp-py-schemas",
    "vmxfp-py-logger",
    "vmxfp-py-services",
    "vmxfp-py-utils",
    "temporalio>=1.11.1",
    "uvicorn>=0.34.2",
    "pydantic-settings>=2.9.1",
    "vmxfp-py-temporal-utils",
    "vm-x-ai-sdk>=1.6.2",
    "langchain-openai>=0.3.16",
]

[tool.hatch.build.targets.wheel]
packages = ["api"]

[tool.hatch.metadata]
allow-direct-references = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "dist",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = [ "B008" ]

fixable = ["ALL"]
unfixable = []

[tool.uv.sources]
vmxfp-py-utils = { workspace = true }
vmxfp-py-db-models = { workspace = true }
vmxfp-py-db-repositories = { workspace = true }
vmxfp-py-services = { workspace = true }
vmxfp-py-db-services = { workspace = true }
vmxfp-py-logger = { workspace = true }
vmxfp-py-schemas = { workspace = true }
vmxfp-py-temporal-utils = { workspace = true }
