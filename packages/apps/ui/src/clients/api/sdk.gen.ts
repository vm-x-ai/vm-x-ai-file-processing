// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetProjectsData, GetProjectsResponses, GetProjectsErrors, CreateProjectData, CreateProjectResponses, CreateProjectErrors, DeleteProjectData, DeleteProjectResponses, DeleteProjectErrors, GetProjectData, GetProjectResponses, GetProjectErrors, UpdateProjectData, UpdateProjectResponses, UpdateProjectErrors, UploadIntentData, UploadIntentResponses, UploadIntentErrors, GetFilesData, GetFilesResponses, GetFilesErrors, SearchFilesData, SearchFilesResponses, SearchFilesErrors, DeleteFileData, DeleteFileResponses, DeleteFileErrors, GetFileData, GetFileResponses, GetFileErrors, GetFileContentData, GetFileContentResponses, GetFileContentErrors, GetFileEvaluationsData, GetFileEvaluationsResponses, GetFileEvaluationsErrors, GetEvaluationsData, GetEvaluationsResponses, GetEvaluationsErrors, CreateEvaluationData, CreateEvaluationResponses, CreateEvaluationErrors, GetEvaluationsTreeData, GetEvaluationsTreeResponses, GetEvaluationsTreeErrors, GetFilesByEvaluationData, GetFilesByEvaluationResponses, GetFilesByEvaluationErrors, DeleteEvaluationData, DeleteEvaluationResponses, DeleteEvaluationErrors, UpdateEvaluationData, UpdateEvaluationResponses, UpdateEvaluationErrors, GetEvaluationCategoriesData, GetEvaluationCategoriesResponses, GetEvaluationCategoriesErrors, CreateEvaluationCategoryData, CreateEvaluationCategoryResponses, CreateEvaluationCategoryErrors, DeleteEvaluationCategoryData, DeleteEvaluationCategoryResponses, DeleteEvaluationCategoryErrors, UpdateEvaluationCategoryData, UpdateEvaluationCategoryResponses, UpdateEvaluationCategoryErrors, GetEvaluationsByCategoryData, GetEvaluationsByCategoryResponses, GetEvaluationsByCategoryErrors, SimilaritySearchData, SimilaritySearchResponses, SimilaritySearchErrors, GetEvaluationTemplatesData, GetEvaluationTemplatesResponses, GetEvaluationTemplatesErrors, CreateEvaluationTemplateData, CreateEvaluationTemplateResponses, CreateEvaluationTemplateErrors, DeleteEvaluationTemplateData, DeleteEvaluationTemplateResponses, DeleteEvaluationTemplateErrors, UpdateEvaluationTemplateData, UpdateEvaluationTemplateResponses, UpdateEvaluationTemplateErrors, HealthHealthGetData, HealthHealthGetResponses, HealthHealthGetErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Projects
 * Get all projects
 */
export const getProjects = <ThrowOnError extends boolean = false>(options?: Options<GetProjectsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetProjectsResponses, GetProjectsErrors, ThrowOnError>({
        url: '/projects',
        ...options
    });
};

/**
 * Create Project
 * Create a project
 */
export const createProject = <ThrowOnError extends boolean = false>(options: Options<CreateProjectData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateProjectResponses, CreateProjectErrors, ThrowOnError>({
        url: '/projects',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Project
 * Delete a project by id
 */
export const deleteProject = <ThrowOnError extends boolean = false>(options: Options<DeleteProjectData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteProjectResponses, DeleteProjectErrors, ThrowOnError>({
        url: '/projects/{project_id}',
        ...options
    });
};

/**
 * Get Project
 * Get a project by id
 */
export const getProject = <ThrowOnError extends boolean = false>(options: Options<GetProjectData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetProjectResponses, GetProjectErrors, ThrowOnError>({
        url: '/projects/{project_id}',
        ...options
    });
};

/**
 * Update Project
 * Update a project by id
 */
export const updateProject = <ThrowOnError extends boolean = false>(options: Options<UpdateProjectData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateProjectResponses, UpdateProjectErrors, ThrowOnError>({
        url: '/projects/{project_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Upload Intent
 * Upload an intent for a project
 */
export const uploadIntent = <ThrowOnError extends boolean = false>(options: Options<UploadIntentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UploadIntentResponses, UploadIntentErrors, ThrowOnError>({
        url: '/projects/{project_id}/upload-intent',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Files
 * Get all files for a project
 */
export const getFiles = <ThrowOnError extends boolean = false>(options: Options<GetFilesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetFilesResponses, GetFilesErrors, ThrowOnError>({
        url: '/projects/{project_id}/files',
        ...options
    });
};

/**
 * Search Files
 * Search files for a project
 */
export const searchFiles = <ThrowOnError extends boolean = false>(options: Options<SearchFilesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SearchFilesResponses, SearchFilesErrors, ThrowOnError>({
        url: '/projects/{project_id}/files/search',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete File
 * Delete a file by project and file id
 */
export const deleteFile = <ThrowOnError extends boolean = false>(options: Options<DeleteFileData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteFileResponses, DeleteFileErrors, ThrowOnError>({
        url: '/projects/{project_id}/file/{file_id}',
        ...options
    });
};

/**
 * Get File
 * Get a file by project and file id
 */
export const getFile = <ThrowOnError extends boolean = false>(options: Options<GetFileData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetFileResponses, GetFileErrors, ThrowOnError>({
        url: '/projects/{project_id}/file/{file_id}',
        ...options
    });
};

/**
 * Get File Content
 * Get a file content by project and file id
 */
export const getFileContent = <ThrowOnError extends boolean = false>(options: Options<GetFileContentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetFileContentResponses, GetFileContentErrors, ThrowOnError>({
        url: '/projects/{project_id}/file/{file_id}/content',
        ...options
    });
};

/**
 * Get File Evaluations
 * Get all evaluations for a file
 */
export const getFileEvaluations = <ThrowOnError extends boolean = false>(options: Options<GetFileEvaluationsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetFileEvaluationsResponses, GetFileEvaluationsErrors, ThrowOnError>({
        url: '/projects/{project_id}/file/{file_id}/evaluations',
        ...options
    });
};

/**
 * Get Evaluations
 * Get all evaluations for a project
 */
export const getEvaluations = <ThrowOnError extends boolean = false>(options: Options<GetEvaluationsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetEvaluationsResponses, GetEvaluationsErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluations',
        ...options
    });
};

/**
 * Create Evaluation
 * Create an evaluation for a project
 */
export const createEvaluation = <ThrowOnError extends boolean = false>(options: Options<CreateEvaluationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateEvaluationResponses, CreateEvaluationErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluations',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Evaluations Tree
 * Get all evaluations for a project
 */
export const getEvaluationsTree = <ThrowOnError extends boolean = false>(options: Options<GetEvaluationsTreeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetEvaluationsTreeResponses, GetEvaluationsTreeErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluations/tree',
        ...options
    });
};

/**
 * Get Files By Evaluation
 * Get all files for an evaluation
 */
export const getFilesByEvaluation = <ThrowOnError extends boolean = false>(options: Options<GetFilesByEvaluationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetFilesByEvaluationResponses, GetFilesByEvaluationErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluation/{evaluation_id}/files',
        ...options
    });
};

/**
 * Delete Evaluation
 * Delete an evaluation by project and evaluation id
 */
export const deleteEvaluation = <ThrowOnError extends boolean = false>(options: Options<DeleteEvaluationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteEvaluationResponses, DeleteEvaluationErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluations/{evaluation_id}',
        ...options
    });
};

/**
 * Update Evaluation
 * Update an evaluation for a project
 */
export const updateEvaluation = <ThrowOnError extends boolean = false>(options: Options<UpdateEvaluationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateEvaluationResponses, UpdateEvaluationErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluations/{evaluation_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Evaluation Categories
 * Get all evaluation categories for a project
 */
export const getEvaluationCategories = <ThrowOnError extends boolean = false>(options: Options<GetEvaluationCategoriesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetEvaluationCategoriesResponses, GetEvaluationCategoriesErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluation-categories',
        ...options
    });
};

/**
 * Create Evaluation Category
 * Create an evaluation category for a project
 */
export const createEvaluationCategory = <ThrowOnError extends boolean = false>(options: Options<CreateEvaluationCategoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateEvaluationCategoryResponses, CreateEvaluationCategoryErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluation-categories',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Evaluation Category
 * Delete an evaluation category for a project
 */
export const deleteEvaluationCategory = <ThrowOnError extends boolean = false>(options: Options<DeleteEvaluationCategoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteEvaluationCategoryResponses, DeleteEvaluationCategoryErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluation-categories/{category_id}',
        ...options
    });
};

/**
 * Update Evaluation Category
 * Update an evaluation category for a project
 */
export const updateEvaluationCategory = <ThrowOnError extends boolean = false>(options: Options<UpdateEvaluationCategoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateEvaluationCategoryResponses, UpdateEvaluationCategoryErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluation-categories/{category_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Evaluations By Category
 * Get all evaluations for a specific category
 */
export const getEvaluationsByCategory = <ThrowOnError extends boolean = false>(options: Options<GetEvaluationsByCategoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetEvaluationsByCategoryResponses, GetEvaluationsByCategoryErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluation-categories/{category_id}/evaluations',
        ...options
    });
};

/**
 * Similarity Search
 * Perform a similarity search
 */
export const similaritySearch = <ThrowOnError extends boolean = false>(options: Options<SimilaritySearchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SimilaritySearchResponses, SimilaritySearchErrors, ThrowOnError>({
        url: '/projects/{project_id}/similarity-search',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Evaluation Templates
 * Get all evaluation templates for a project
 */
export const getEvaluationTemplates = <ThrowOnError extends boolean = false>(options: Options<GetEvaluationTemplatesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetEvaluationTemplatesResponses, GetEvaluationTemplatesErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluation-templates',
        ...options
    });
};

/**
 * Create Evaluation Template
 * Create an evaluation template for a project
 */
export const createEvaluationTemplate = <ThrowOnError extends boolean = false>(options: Options<CreateEvaluationTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateEvaluationTemplateResponses, CreateEvaluationTemplateErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluation-templates',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Evaluation Template
 * Delete an evaluation template by project and evaluation template id
 */
export const deleteEvaluationTemplate = <ThrowOnError extends boolean = false>(options: Options<DeleteEvaluationTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteEvaluationTemplateResponses, DeleteEvaluationTemplateErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluation-templates/{evaluation_template_id}',
        ...options
    });
};

/**
 * Update Evaluation Template
 * Update an evaluation template for a project
 */
export const updateEvaluationTemplate = <ThrowOnError extends boolean = false>(options: Options<UpdateEvaluationTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateEvaluationTemplateResponses, UpdateEvaluationTemplateErrors, ThrowOnError>({
        url: '/projects/{project_id}/evaluation-templates/{evaluation_template_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Health
 */
export const healthHealthGet = <ThrowOnError extends boolean = false>(options?: Options<HealthHealthGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<HealthHealthGetResponses, HealthHealthGetErrors, ThrowOnError>({
        url: '/health',
        ...options
    });
};